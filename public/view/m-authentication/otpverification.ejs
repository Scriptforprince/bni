<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #cf1e2d, #f56c7c);
            font-family: 'Arial', sans-serif;
            margin: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }

        .otp-card {
            background: #ffffff;
            border-radius: 15px;
            padding: 30px 20px;
            width: 100%;
            max-width: 400px;
            transform: perspective(800px) rotateX(3deg);
            box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.2);
        }

        .otp-header h2 {
            font-size: 1.8rem;
            margin-bottom: 10px;
        }

        .otp-header p {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .otp-form {
            margin-top: 20px;
        }

        .otp-inputs {
            display: flex;
            gap: 10px;
        }

        .otp-input {
            width: 50px;
            height: 50px;
            border: 1px solid #ced4da;
            border-radius: 8px;
            text-align: center;
            font-size: 1.5rem;
            transition: 0.3s;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .otp-input:focus {
            outline: none;
            border-color: #cf1e2d;
            box-shadow: 0 8px 12px rgba(207, 30, 45, 0.5);
        }

        .otp-footer p {
            font-size: 0.85rem;
        }

        .otp-footer a {
            text-decoration: none;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center vh-100">
        <div class="otp-card shadow">
            <div class="otp-header">
                <h2 class="text-center">Verify Your OTP</h2>
                <p class="text-muted text-center">Enter the OTP sent to your email/phone</p>
            </div>
            <form id="otpForm" class="otp-form">
                <div class="otp-inputs d-flex justify-content-between mb-4">
                    <input type="text" class="otp-input" maxlength="1" required>
                    <input type="text" class="otp-input" maxlength="1" required>
                    <input type="text" class="otp-input" maxlength="1" required>
                    <input type="text" class="otp-input" maxlength="1" required>
                    <input type="text" class="otp-input" maxlength="1" required>
                    <input type="text" class="otp-input" maxlength="1" required>
                </div>
                <button type="submit" class="btn btn-primary w-100" id="verifyBtn">
                    Verify OTP
                </button>
            </form>
            <div class="otp-footer text-center mt-3">
                <p>Didn't receive the code? <a href="#" id="resendOtp" class="text-primary">Resend OTP</a></p>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const otpInputs = document.querySelectorAll(".otp-input");
            const form = document.getElementById("otpForm");
            const verifyBtn = document.getElementById("verifyBtn");
            const resendOtp = document.getElementById("resendOtp");

            // Focus on the next input after typing
            otpInputs.forEach((input, index) => {
                input.addEventListener("input", (e) => {
                    if (e.target.value.length === 1 && index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                });

                input.addEventListener("keydown", (e) => {
                    if (e.key === "Backspace" && index > 0 && !input.value) {
                        otpInputs[index - 1].focus();
                    }
                });
            });

            // Handle form submission
            form.addEventListener("submit", (e) => {
                e.preventDefault();

                // Get the entered OTP
                const otp = Array.from(otpInputs)
                    .map((input) => input.value)
                    .join("");

                console.log("Entered OTP:", otp);

                // Simulate API verification
                verifyBtn.innerHTML = `<span class="spinner-border spinner-border-sm"></span> Verifying...`;
                verifyBtn.disabled = true;

                
            });

            // Handle Resend OTP
            resendOtp.addEventListener("click", (e) => {
                e.preventDefault();
                alert("OTP Resent!");
            });
        });
    </script>
    <script src="../../assets/js/otpVerification.js"></script>
</body>
</html>